📄 PRD: DIY 비즈 공예 셀프 디자인 & 장바구니 서비스
1. 서비스 개요
목적: 사용자(공예 고객)가 공예 소품을 배경 위에 자유롭게 배치해보며 디자인을 시뮬레이션하고, 마음에 드는 구성품을 카페24 장바구니에 직접 담아 구매할 수 있는 셀프 디자인 웹 서비스 제공

연동 대상: Cafe24 쇼핑몰 (판매자 측 상품 등록 기준)

운영 환경: 웹 기반 (데스크탑 & 모바일 대응)

2. 주요 기능 목록
구분	기능
사용자 기능	배경 선택, 누끼 이미지 검색 및 배치, 회전/이동/레이어 조절/삭제/복제, 장바구니 담기, 전체화면/캡쳐 버튼
관리자 기능	상품 메타 정보 등록(Firebase), 상품 이미지 업로드, 실측 사이즈/태그 등록, 상품 검색 및 관리, 엑셀 기반 일괄 등록 지원
연동 기능	카페24 API 기반 상품 검색, 장바구니 등록, 로그인 상태 연동
공통 기능	사용자 로그인(Firebase Auth), 반응형 UI 제공(모바일 간소화 UI)

3. 사용자 플로우
로그인 (필수)

배경 이미지 선택

상품 필터 검색 → 이미지 캔버스에 배치

회전 / 이동 / 삭제 / 복제 / 레이어 조절

디자인 완료 → 담긴 상품 목록 그대로 장바구니 등록

카페24 장바구니 페이지로 이동 후 결제 진행

4. 캔버스 기능 상세 (Canvas.js 기반)
기능	설명
이미지 배치	필터링된 상품의 투명 PNG 불러오기
배치 제어	이동, 회전, 삭제, 복제, z-index 조절
크기 반영	실측 사이즈 기반 비율 적용 (상대적 기준)
편의 기능	전체화면 전환, 캡쳐 버튼 제공 (단순 브라우저 캡처 유도)

5. Firebase 데이터 구조 (예시)

{
  "product_id": "1234567890",
  "image_url": "https://storage.firebase.com/xxx.png",
  "size": { "width_mm": 20, "height_mm": 30 },
  "tags": ["pink", "round", "small"]
}
product_id: 카페24 상품 ID

image_url: 배경제거된 PNG 이미지 주소

size: 캔버스 배치 시 기준 비율로 활용

tags: 컬러, 스타일, 사이즈 기반 검색 필터

6. 관리자 페이지 기능
기능	설명
상품 등록	이미지 업로드, 상품ID/사이즈/태그 입력
일괄 등록	엑셀 업로드 방식 지원
검색/관리	태그/상품ID로 검색 및 기존 데이터 편집
접근권한	단일 관리자만 접근 가능 (Firebase Auth 또는 인증 URL 제한)

7. 카페24 연동 범위
연동 항목	API	설명
상품 검색	Admin API	상품 ID, 이름 기준 필터 검색 가능
장바구니 등록	Front API 또는 script	사용자 구성품 선택값 기반 상품 ID + 수량으로 장바구니 등록 처리

8. 기술 스택 및 인프라 구조
항목	기술 스택
프론트엔드	Canvas.js 또는 Fabric.js + HTML/CSS/JS
백엔드	Firebase Firestore (DB), Firebase Storage (이미지)
인증	Firebase Authentication
배포	Vercel
연동	카페24 Admin API / Front API

9. 모바일 대응 전략
기능 축소: 배경 선택, 소품 배치, 회전/이동 등 최소 기능만 제공

UI 최적화: 터치 기반 조작 / z-index 조절을 간소화

캔버스 영역 최소화 및 반응형 비율 적용

10. 향후 고도화 고려사항
사용자 디자인 저장 및 불러오기 기능

디자인 공유 URL 또는 SNS 연동

디자인 결과물 이미지 자동 캡처 및 PDF 생성

다중 관리자 권한 분기 (입점형 확장 시)


------------------------------------------------------------------

🎯 DEMO 버전 개발 목표
목표: 로컬에 저장된 이미지 리소스를 기반으로, 비즈 공예 소품을 디자인 캔버스에 배치해볼 수 있는 셀프 디자인 체험 페이지를 개발한다.
이 DEMO에서는 외부 연동(Firebase, Cafe24)은 생략하고, 핵심 인터랙션 구현에 집중한다.

✅ DEMO 버전 핵심 요구사항
1. 기능 요약
기능	설명
배경 선택	2~3가지 배경 이미지 중 택일 가능
소품 검색	태그 또는 이름 필터링으로 소품 검색
이미지 배치	소품 이미지(투명 PNG)를 캔버스에 추가
편집 기능	이동, 회전, 삭제, z-index 조절, 크기 조절, 복제
편의 기능	전체화면 전환 버튼, 디자인 초기화 버튼
반응형	모바일/데스크탑 대응 (간단한 레이아웃 변경)

2. 제한 사항
데이터 소스: 모든 이미지/정보는 public/assets/ 하위 폴더에 로컬 JSON + 이미지 파일로 저장

로그인/회원 기능 없음

장바구니/결제 없음

디자인 결과물 저장 없음 (임시 세션 유지만 고려)

🔧 개발 모듈 단계별 정리
✅ 1단계: 리소스 구조 설계 및 초기 데이터셋

📁 public/
 └── assets/
     ├── backgrounds/
     │   ├── bg1.jpg
     │   ├── bg2.jpg
     ├── items/
     │   ├── red_heart.png
     │   ├── blue_star.png
     └── items.json

Edit
// items.json 예시
[
  {
    "id": "item001",
    "name": "Red Heart",
    "tags": ["red", "heart", "small"],
    "src": "/assets/items/red_heart.png",
    "size": { "width_mm": 20, "height_mm": 20 }
  },
  ...
]
✅ 2단계: UI 레이아웃 구성
영역	설명
좌측 (70%)	상단 고정바: 검색 필터 / 소품 리스트
    	   하단: 캔버스 (Canvas.js or Fabric.js)
우측 (30%) 옵션패널: 배경 선택 / 전체화면 / 초기화 버튼

✅ 3단계: 기능 모듈별 구현
🎨 캔버스 렌더링 모듈
초기 배경 설정

이미지 추가 (Canvas 객체 생성)

실측 사이즈 비율 계산 → 픽셀 변환 (예: 10mm = 10px로 가정)

z-index, 이동, 회전, 크기조절, 복제, 삭제 기능

🖼️ 배경 선택 모듈
라디오 버튼 혹은 썸네일 클릭으로 배경 전환

캔버스 배경 이미지 변경 처리

🔍 소품 검색 및 필터 모듈
items.json을 기반으로 name/tag 필터

필터된 목록 표시 → 클릭 시 캔버스에 배치

🧰 유틸리티 기능 모듈
전체화면 진입 (Fullscreen API)

초기화 (캔버스 객체 전체 제거)

터치 대응 (모바일 환경 drag/zoom 대응은 선택)

✅ 4단계: 반응형 처리
CSS Media Query로 모바일 화면에서:

UI 영역 최소화

드래그 영역 넓게 확보

버튼 터치 간격 확보

복제/삭제 메뉴는 플로팅 버튼으로 제공 가능

🚀 예상 개발 우선순위
우선순위	작업 항목
1	items.json, 배경 이미지, 아이템 이미지 준비
2	기본 UI 레이아웃 구성 (Canvas 중앙, 배경 선택/소품 목록 좌측)
3	Canvas.js 기반 배치 + 편집 기능 구현
4	필터/검색 구현 (local json 기반)
5	편의 기능 추가 (전체화면, 초기화)
6	모바일 대응 (반응형 레이아웃 + 터치 drag 테스트)

📁 기술 스택 제안
항목	기술
프레임워크	없음 또는 Vanilla JS / React (선택사항)
캔버스	Canvas.js 또는 Fabric.js
배포	로컬 테스트 또는 Vercel static 배포
이미지	PNG (배경제거), JPG (배경), JSON (메타정보)

